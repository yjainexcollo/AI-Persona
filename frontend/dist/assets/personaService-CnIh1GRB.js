import{f as n}from"./session-BuX4dWJT.js";const e="http://localhost:3000",d=async t=>{const a=await n(`${e}/api/personas`);if(!a.ok){const o=await a.json();throw new Error(o.message||"Failed to fetch personas")}return await a.json()},h=async t=>{const s=await n(`${e}/api/personas/${t}`);if(!s.ok){const o=await s.json();throw new Error(o.message||"Failed to fetch persona")}return(await s.json()).data},p=async t=>{const s=await n(`${e}/api/personas/${t}/favourite`,{method:"POST",headers:{"Content-Type":"application/json"}});if(!s.ok){const o=await s.json();throw new Error(o.message||"Failed to toggle favourite")}return(await s.json()).data},y=async(t,s,a,o)=>{const r={message:s};a&&(r.conversationId=a),o&&(r.fileId=o);const i=await n(`${e}/api/personas/${t}/chat`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(r)});if(!i.ok){const c=await i.json();throw new Error(c.message||"Failed to send message")}return await i.json()},g=async t=>{const a=await n(`${e}/api/conversations`);if(!a.ok){const o=await a.json();throw new Error(o.message||"Failed to fetch conversations")}return await a.json()},l=async(t,s)=>{const a=await n(`${e}/api/conversations/${t}/visibility`,{method:"PATCH",headers:{"Content-Type":"application/json"},body:JSON.stringify({visibility:s})});if(!a.ok){const o=await a.json();throw new Error(o.message||"Failed to update conversation visibility")}return await a.json()},f=async(t,s)=>{const a=await n(`${e}/api/conversations/${t}/archive`,{method:"PATCH",headers:{"Content-Type":"application/json"},body:JSON.stringify({archived:s})});if(!a.ok){const o=await a.json();throw new Error(o.message||"Failed to update conversation archive status")}return await a.json()},j=async(t,s)=>{const a=await n(`${e}/api/messages/${t}`,{method:"PATCH",headers:{"Content-Type":"application/json"},body:JSON.stringify({content:s})});if(!a.ok){const o=await a.json();throw new Error(o.message||"Failed to edit message")}return await a.json()},m=async(t,s)=>{const a=await n(`${e}/api/conversations/${t}/files`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(s)});if(!a.ok){const o=await a.json();throw new Error(o.message||"Failed to request file upload URL")}return await a.json()},u=async(t,s)=>{const a=await n(`${e}/api/messages/${t}/reactions`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({type:s})});if(!a.ok){const o=await a.json();throw new Error(o.message||"Failed to toggle message reaction")}return await a.json()},$=async t=>{const s=await fetch(`${e}/p/${t}`,{method:"GET",headers:{"Content-Type":"application/json"}});if(!s.ok){const a=await s.json();throw new Error(a.message||"Failed to get shared conversation")}return await s.json()},v=async(t,s)=>{const a={},o=await n(`${e}/api/conversations/${t}/share`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(a)});if(!o.ok){const r=await o.json();throw new Error(r.message||"Failed to create shareable link")}return await o.json()},T=async t=>{const s=await n(`${e}/api/chat-sessions/${t}`);if(!s.ok){const o=await s.json();throw new Error(o.message||"Failed to fetch chat session")}return(await s.json()).data},C=async()=>{const t=await n(`${e}/api/chat-sessions`);if(!t.ok){const a=await t.json();throw new Error(a.message||"Failed to fetch chat sessions")}return(await t.json()).data};export{g as a,h as b,v as c,T as d,j as e,C as f,d as g,f as h,p as i,$ as j,m as r,y as s,u as t,l as u};
