async function i(){const n="http://localhost:3000",o=localStorage.getItem("refreshToken");if(!o)throw new Error("No refresh token available");const t=await fetch(`${n}/api/auth/refresh`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({refreshToken:o})});if(!t.ok)throw new Error("Failed to refresh token");const e=await t.json();if(e.data&&e.data.accessToken)return localStorage.setItem("token",e.data.accessToken),e.data.refreshToken&&localStorage.setItem("refreshToken",e.data.refreshToken),e.data.accessToken;throw new Error("No token returned")}async function f(n,o={}){let t=localStorage.getItem("token");const e=localStorage.getItem("workspaceId");let r={...o.headers||{},Authorization:`Bearer ${t}`};e&&(r["x-workspace-id"]=e);let a=await fetch(n,{...o,headers:r});if(a.status===401)try{t=await i(),r={...r||{},Authorization:`Bearer ${t}`},e&&(r["x-workspace-id"]=e),a=await fetch(n,{...o,headers:r})}catch(s){throw localStorage.removeItem("token"),window.location.href="/login",s}if(a.status===500)try{const h=await a.clone().text(),c=JSON.parse(h);if(c.error&&c.error.message&&(c.error.message.includes("Invalid or expired access token")||c.error.message.includes("Invalid or expired token")))try{t=await i(),r={...r||{},Authorization:`Bearer ${t}`},e&&(r["x-workspace-id"]=e),a=await fetch(n,{...o,headers:r})}catch(l){throw localStorage.removeItem("token"),window.location.href="/login",l}}catch(s){console.warn("Could not parse error response:",s)}return a}export{f};
